generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "fullTextSearch"]
  engineType      = "binary"
  output          = "../generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
}

model Codemod {
  id               Int              @id @default(autoincrement())
  slug             String           @unique @db.VarChar(255)
  name             String           @unique @db.VarChar(255)
  description      String           @db.Text
  featured         Boolean          @default(false)
  verified         Boolean          @default(false)
  private          Boolean
  author           String           @db.VarChar(255)
  totalRuns        Int              @default(0)
  labels           String[]         @default([])
  frameworkVersion Int              @default(0)
  frameworks       String[]         @default([])
  useCaseCategory  String           @default("") @db.VarChar(255)
  versions         CodemodVersion[]
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now()) @updatedAt

  @@index([author])
  @@index([name])
  @@index([featured])
  @@index([verified])
}

model CodemodVersion {
  id                       Int      @id @default(autoincrement())
  version                  String   @db.VarChar(255)
  description              String   @db.Text
  tags                     String[] @default([])
  engine                   String   @db.VarChar(255)
  applicability            Json?
  arguments                Json?
  vsCodeLink               String   @db.VarChar(255)
  codemodStudioExampleLink String?  @db.VarChar(255)
  testProjectCommand       String?  @db.VarChar(255)
  sourceRepo               String?  @db.VarChar(255)
  s3Bucket                 String   @db.VarChar(255)
  s3UploadKey              String   @db.VarChar(255)
  codemodId                Int
  codemod                  Codemod  @relation(fields: [codemodId], references: [id], onDelete: Cascade)
  createdAt                DateTime @default(now())
  updatedAt                DateTime @default(now()) @updatedAt

  @@index([codemodId])
  @@index([createdAt])
}

model Tag {
  id             Int      @id @default(autoincrement())
  title          String   @unique @db.VarChar(255)
  aliases        String[]
  classification String   @db.VarChar(255)
  displayName    String   @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt

  @@index([title])
  @@index([aliases])
}

model UserLoginIntent {
  id        String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token     String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model CodeDiff {
  id        String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String?  @db.VarChar(255)
  source    String   @db.VarChar(255)
  before    String   @db.Text
  after     String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
